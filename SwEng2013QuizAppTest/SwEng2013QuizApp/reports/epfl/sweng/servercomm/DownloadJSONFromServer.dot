#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6_6-1-g9240c4 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// epfl.sweng.servercomm.DownloadJSONFromServer
	c236 [label=<<table title="epfl.sweng.servercomm.DownloadJSONFromServer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./DownloadJSONFromServer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DownloadJSONFromServer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DownloadJSONFromServer() </td></tr>
<tr><td align="left" balign="left"> # doInBackground(url : String[]) : String </td></tr>
		</table></td></tr>
		</table>>, URL="./DownloadJSONFromServer.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//epfl.sweng.servercomm.DownloadJSONFromServer extends android.os.AsyncTask<java.lang.String, java.lang.Void, java.lang.String>
	c261:p -> c236:p [dir=back,arrowtail=empty];
	// epfl.sweng.servercomm.DownloadJSONFromServer DEPEND java.lang.String
	c236:p -> c270:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// epfl.sweng.servercomm.DownloadJSONFromServer DEPEND java.lang.String
	c236:p -> c270:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// java.lang.String
	c270 [label=<<table title="java.lang.String" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CASE_INSENSITIVE_ORDER : Comparator&lt;String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + String() </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : char[]) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : char[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : int[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : String) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : Charset) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : Charset) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : byte[]) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : StringBuffer) </td></tr>
<tr><td align="left" balign="left"> + String(arg0 : StringBuilder) </td></tr>
<tr><td align="left" balign="left"> + length() : int </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + charAt(arg0 : int) : char </td></tr>
<tr><td align="left" balign="left"> + codePointAt(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + codePointBefore(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + codePointCount(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + offsetByCodePoints(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + getChars(arg0 : int, arg1 : int, arg2 : char[], arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + getBytes(arg0 : int, arg1 : int, arg2 : byte[], arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + getBytes(arg0 : String) : byte[] </td></tr>
<tr><td align="left" balign="left"> + getBytes(arg0 : Charset) : byte[] </td></tr>
<tr><td align="left" balign="left"> + getBytes() : byte[] </td></tr>
<tr><td align="left" balign="left"> + equals(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + contentEquals(arg0 : StringBuffer) : boolean </td></tr>
<tr><td align="left" balign="left"> + contentEquals(arg0 : CharSequence) : boolean </td></tr>
<tr><td align="left" balign="left"> + equalsIgnoreCase(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + compareTo(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + compareToIgnoreCase(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + regionMatches(arg0 : int, arg1 : String, arg2 : int, arg3 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + regionMatches(arg0 : boolean, arg1 : int, arg2 : String, arg3 : int, arg4 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + startsWith(arg0 : String, arg1 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + startsWith(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + endsWith(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : String, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : String, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + substring(arg0 : int) : String </td></tr>
<tr><td align="left" balign="left"> + substring(arg0 : int, arg1 : int) : String </td></tr>
<tr><td align="left" balign="left"> + subSequence(arg0 : int, arg1 : int) : CharSequence </td></tr>
<tr><td align="left" balign="left"> + concat(arg0 : String) : String </td></tr>
<tr><td align="left" balign="left"> + replace(arg0 : char, arg1 : char) : String </td></tr>
<tr><td align="left" balign="left"> + matches(arg0 : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : CharSequence) : boolean </td></tr>
<tr><td align="left" balign="left"> + replaceFirst(arg0 : String, arg1 : String) : String </td></tr>
<tr><td align="left" balign="left"> + replaceAll(arg0 : String, arg1 : String) : String </td></tr>
<tr><td align="left" balign="left"> + replace(arg0 : CharSequence, arg1 : CharSequence) : String </td></tr>
<tr><td align="left" balign="left"> + split(arg0 : String, arg1 : int) : String[] </td></tr>
<tr><td align="left" balign="left"> + split(arg0 : String) : String[] </td></tr>
<tr><td align="left" balign="left"> + toLowerCase(arg0 : Locale) : String </td></tr>
<tr><td align="left" balign="left"> + toLowerCase() : String </td></tr>
<tr><td align="left" balign="left"> + toUpperCase(arg0 : Locale) : String </td></tr>
<tr><td align="left" balign="left"> + toUpperCase() : String </td></tr>
<tr><td align="left" balign="left"> + trim() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + toCharArray() : char[] </td></tr>
<tr><td align="left" balign="left"> + format(arg0 : String, arg1 : Object[]) : String </td></tr>
<tr><td align="left" balign="left"> + format(arg0 : Locale, arg1 : String, arg2 : Object[]) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : Object) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : char[]) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : char[], arg1 : int, arg2 : int) : String </td></tr>
<tr><td align="left" balign="left"> + copyValueOf(arg0 : char[], arg1 : int, arg2 : int) : String </td></tr>
<tr><td align="left" balign="left"> + copyValueOf(arg0 : char[]) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : char) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : int) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : long) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : float) : String </td></tr>
<tr><td align="left" balign="left"> + valueOf(arg0 : double) : String </td></tr>
<tr><td align="left" balign="left"> + intern() : String </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// android.os.AsyncTask<Params, Progress, Result>
	c261 [label=<<table title="android.os.AsyncTask" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/android/os/AsyncTask.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AsyncTask&lt;Params, Progress, Result&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + THREAD_POOL_EXECUTOR : Executor </td></tr>
<tr><td align="left" balign="left"> + SERIAL_EXECUTOR : Executor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AsyncTask() </td></tr>
<tr><td align="left" balign="left"> + getStatus() : AsyncTask.Status </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> # doInBackground(arg0 : Params[]) : Result </font></td></tr>
<tr><td align="left" balign="left"> # onPreExecute() </td></tr>
<tr><td align="left" balign="left"> # onPostExecute(arg0 : Result) </td></tr>
<tr><td align="left" balign="left"> # onProgressUpdate(arg0 : Progress[]) </td></tr>
<tr><td align="left" balign="left"> # onCancelled(arg0 : Result) </td></tr>
<tr><td align="left" balign="left"> # onCancelled() </td></tr>
<tr><td align="left" balign="left"> + isCancelled() : boolean </td></tr>
<tr><td align="left" balign="left"> + cancel(arg0 : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + get() : Result </td></tr>
<tr><td align="left" balign="left"> + get(arg0 : long, arg1 : TimeUnit) : Result </td></tr>
<tr><td align="left" balign="left"> + execute(arg0 : Params[]) : AsyncTask&lt;Params, Progress, Result&gt; </td></tr>
<tr><td align="left" balign="left"> + executeOnExecutor(arg0 : Executor, arg1 : Params[]) : AsyncTask&lt;Params, Progress, Result&gt; </td></tr>
<tr><td align="left" balign="left"> + execute(arg0 : Runnable) </td></tr>
<tr><td align="left" balign="left"> # publishProgress(arg0 : Progress[]) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/android/os/AsyncTask.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

